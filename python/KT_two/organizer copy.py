import os
os.chdir('python\KT_two')
FILENAME = 'user_notes.txt'

# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if not os.path.exists(FILENAME):
    open(FILENAME, 'w').close()

def show_file():
    print("\nüìÑ –¢–µ–∫—É—â–∏–π —Ñ–∞–π–ª:")
    with open(FILENAME, 'r', encoding='utf-8') as file:
        lines = file.readlines()
        if not lines:
            print("–§–∞–π–ª –ø—É—Å—Ç.")
        else:
            for i, line in enumerate(lines, 1):
                print(f"{i}: {line.strip()}")
    print()

def add_line():
    text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ")
    with open(FILENAME, 'a', encoding='utf-8') as file:
        file.write(text + '\n')
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ!\n")

def delete_line():
    show_file()
    try:
        num = int(input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
        with open(FILENAME, 'r', encoding='utf-8') as file:
            lines = file.readlines()
        if 1 <= num <= len(lines):
            del lines[num - 1]
            with open(FILENAME, 'w', encoding='utf-8') as file:
                file.writelines(lines)
            print("üóëÔ∏è –°—Ç—Ä–æ–∫–∞ —É–¥–∞–ª–µ–Ω–∞!\n")
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏!\n")
    except ValueError:
        print("‚ö†Ô∏è –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ!\n")

def main():
    while True:
        print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∞–π–ª")
        print("2. –î–æ–±–∞–≤–∏—Ç—å —Å—Ç—Ä–æ–∫—É")
        print("3. –£–¥–∞–ª–∏—Ç—å —Å—Ç—Ä–æ–∫—É")
        print("4. –í—ã–π—Ç–∏")
        choice = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ")
        if choice == '1':
            show_file()
        elif choice == '2':
            add_line()
        elif choice == '3':
            delete_line()
        elif choice == '4':
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n")

if __name__ == "__main__":
    main()
